!!!

- @hyphenate_data_attrs = false
- size = 50

%html
  %head
    :css
      body {
        background-color: linen;
      }
      #left {
        float: left;
        margin-right: 20px;
      }
      .square {
        margin: 3px;
        background: #ddd;
      }
      .ball {
        width: #{size}px;
        height: #{size}px;
        border-radius: #{size/2}px;
        border: 1px solid black;
      }

    :javascript
      window.onload = function () {
        each_ball(
          function(elm) {
            ku_show_setup(elm);
            elm.onclick = function(event) {
              var target = event.target;
              if (target.ku_showing_solved) {
                ku_show_setup(target);
              }
              else {
                ku_show_solved(target);
              }
            }
          }
        )
      }

      function each_ball(func) {
        var balls = document.getElementsByClassName("ball");
        var n;
        for (n = 0; n < balls.length; n++) {
          func(balls[n]);
        }
      }

      function ku_show_setup(elm) {
        elm.style.background = elm.dataset.setup_color;
        elm.ku_showing_solved = false;
      }

      function ku_show_solved(elm) {
        elm.style.background = elm.dataset.solved_color;
        elm.ku_showing_solved = true;
      }

      function ku_new_puzzle() {
        window.location.href = '#{url "/"}' + '?level=' + document.getElementById("level").value;
      }

  %body
    #left
      %table{style: "margin-bottom: 5px"}
        - 3.times do |row|
          %tr
            - 3.times do |col|
              %td
                %table.square
                  - 3.times do |sub_row|
                    %tr
                      - 3.times do |sub_col|
                        - n = ((row*3)+sub_row)*9 + col*3 + sub_col
                        %td
                          .ball{data: {setup_color: colors[n][:setup] || "#f8f8f8", solved_color: colors[n][:solved]}}

      %button{onclick: "each_ball(ku_show_setup)"} Show Setup
      %button{onclick: "each_ball(ku_show_solved)"} Show Solution
      %button{onclick: "ku_new_puzzle()"} New Puzzle

      Difficulty:
      %select{id: "level"}
        - WebSudoku::LEVELS.each do |text, number|
          %option{value: number, selected: number == level}
            = text

    %div{style: "padding-top: 3px"}
      = markdown :"../README"
      SpudoKu is hosted on
      #{link_to("Heroku", "http://www.heroku.com/")},
      and hackable on
      #{link_to("GitHub", "https://github.com/tommay/spudoku")}.
